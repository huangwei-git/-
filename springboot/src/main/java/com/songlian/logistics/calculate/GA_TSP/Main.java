package com.songlian.logistics.calculate.GA_TSP;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
    public static void main(String[] args) throws IOException, ClassNotFoundException {
        //double locs[][] = {{1549,3408}, {1561,2641}, {3904,3453}, {2216,1177}, {1563,4906}, {3554,827}, {2578,4370}, {3358,2054}, {143,4789}, {610,774}, {1557,4064}, {771,1823}, {4753,4192}, {2037,1897}, {4692,1887}, {839,415}, {4314,2696}, {428,3626}, {2725,543}, {2349,263}, {770,2550}, {1627,1361}, {2139,3908}, {1977,2775}, {4345,11}};
        //List<double[]> list = new ArrayList<>();
        //Collections.addAll(list, locs);
        //GA_TSP tsp = new GA_TSP(list);
        //tsp.solve();
        int arr[] = {8, 17, 0, 23, 1, 20, 11, 9, 15, 19, 18, 3, 21, 13, 7, 5, 24, 14, 16, 2, 12, 6, 22, 10, 4, 8};
        for(int i = 0;i < arr.length - 1;i++){
            System.out.println("{ source:"+arr[i]+", target:"+arr[i+1]+" },");
        }
    }
}

/**
 * 蚁群算法：
 *      最佳迭代次数:437
 *      最短路程为：7851.238774201772
 *      最佳路径为：[8, 17, 0, 23, 1, 20, 11, 9, 15, 19, 18, 3, 21, 13, 7, 5, 24, 14, 16, 2, 12, 6, 22, 10, 4, 8]
 */

/**
 * 遗传算法：
 *      初始解为：17020.185275823755
 *      最佳迭代次数:129278
 *      最短路程为：7775.474429410549
 *      最佳路径为：[21, 13, 3, 19, 18, 24, 5, 7, 14, 16, 2, 12, 6, 22, 10, 4, 8, 17, 0, 23, 1, 20, 11, 9, 15, 21]
 */

/**
 * 禁忌搜索算法：
 *      初始解：[1, 2, 19, 13, 3, 18, 0, 23, 4, 7, 5, 14, 16, 9, 6, 20, 24, 8, 15, 11, 22, 12, 17, 21, 10]
 *      最佳迭代次数:375
 *      最短路程为：7775.47442941055
 *      最佳路径为：[11, 9, 15, 21, 13, 3, 19, 18, 24, 5, 7, 14, 16, 2, 12, 6, 22, 10, 4, 8, 17, 0, 23, 1, 20, 11]
 *
 *  整数规划算法：
 *      最短路径为：[0, 23, 1, 20, 11, 9, 15, 21, 13, 3, 19, 18, 24, 5, 7, 14, 16, 2, 12, 6, 22, 10, 4, 8, 17, 0]
 *      最短路径长度为：7775.474429410551
 */
